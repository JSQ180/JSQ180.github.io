<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JSQのBlog</title>
  
  <subtitle>尝试记录琐碎的日常</subtitle>
  <link href="https://jsq180.github.io/atom.xml" rel="self"/>
  
  <link href="https://jsq180.github.io/"/>
  <updated>2022-08-27T13:37:53.619Z</updated>
  <id>https://jsq180.github.io/</id>
  
  <author>
    <name>JSQ</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>React入门篇-认识React</title>
    <link href="https://jsq180.github.io/posts/74b32545.html"/>
    <id>https://jsq180.github.io/posts/74b32545.html</id>
    <published>2022-08-27T13:37:53.619Z</published>
    <updated>2022-08-27T13:37:53.619Z</updated>
    
    <content type="html"><![CDATA[<p>这是第一次尝试搭建个人博客，也是为了记录学习和工作上的各种问题，希望以后能够继续更新博客，既是对自己知识的巩固，也是一种记录。<br>首先，因工作上使用React，所以这次也是从零开始，对React技术一种重温，同时对没有了解到的知识的学习。</p><h1 id="React基础篇"><a href="#React基础篇" class="headerlink" title="React基础篇"></a>React基础篇</h1><h2 id="一、React介绍"><a href="#一、React介绍" class="headerlink" title="一、React介绍"></a>一、React介绍</h2><h3 id="1-React起源与发展"><a href="#1-React起源与发展" class="headerlink" title="1.React起源与发展"></a>1.React起源与发展</h3><p>React 起源于 Facebook 的内部项目，因为该公司对市场上所有 JavaScript MVC 框架，都不满意，就决定自己写一套，用来架设Instagram 的网站。做出来以后，发现这套东西很好用，就在2013年5月开源了。</p><h3 id="2-React与传统MVC的关系"><a href="#2-React与传统MVC的关系" class="headerlink" title="2.React与传统MVC的关系"></a>2.React与传统MVC的关系</h3><p>轻量级的视图层库！A JavaScript library for building user interfaces</p><p>React不是一个完整的MVC框架，最多可以认为是MVC中的V（View），甚至React并不非常认可MVC开发模式；React 构建页面 UI 的库。可以简单地理解为，React 将界面分成了各个独立的小块，每一个块就是组件，这些组件之间可以组合、嵌套，就成了我们的页面。</p><h3 id="3-React的特性"><a href="#3-React的特性" class="headerlink" title="3.React的特性"></a>3.React的特性</h3><p><img src="https://s1.xptou.com/2022/08/27/630a05e2a28aa.png" alt="React特性"></p><h3 id="4-虚拟DOM"><a href="#4-虚拟DOM" class="headerlink" title="4.虚拟DOM"></a>4.虚拟DOM</h3><p><img src="https://s1.xptou.com/2022/08/27/630a05c1543a8.png" alt="传统DOM更新"><br><img src="https://s1.xptou.com/2022/08/27/630a05926ad17.png" alt="虚拟DOM"></p><h2 id="二、创建脚手架"><a href="#二、创建脚手架" class="headerlink" title="二、创建脚手架"></a>二、创建脚手架</h2><h3 id="1-全局安装create-react-app"><a href="#1-全局安装create-react-app" class="headerlink" title="1.全局安装create-react-app"></a>1.全局安装create-react-app</h3><p>全局安装脚手架：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SHELL">npm install -g create-react-app<br></code></pre></td></tr></table></figure><br>安装完成，可以检查是否安装成功（检查版本）：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SHELL">create-react-app -V<br></code></pre></td></tr></table></figure><br>创建一个项目：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SHELL">create-react-app your-app (your-app为自定义项目名称)<br></code></pre></td></tr></table></figure><br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs EXAMPLE">Creating a new React app in /dir/your-app. Installing packages. This might take a couple of minutes. 安装过程较慢， <br>Installing react, react-dom, and react-scripts...    (执行过程)<br></code></pre></td></tr></table></figure></p><h3 id="2-如果不想全局安装，可以直接使用npx"><a href="#2-如果不想全局安装，可以直接使用npx" class="headerlink" title="2.如果不想全局安装，可以直接使用npx"></a>2.如果不想全局安装，可以直接使用npx</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SHELL">npx create-react-app myapp 也可以实现相同的效果<br></code></pre></td></tr></table></figure><p>这需要等待一段时间，这个过程实际上会安装三个东西<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html">•react: react的顶级库<br>•react-dom: 因为react有很多的运行环境，比如app端的•react-native, 我们要在web上运行就使用react-dom<br>•react-scripts: 包含运行和打包react应用程序的所有脚本及配置<br></code></pre></td></tr></table></figure></p><h3 id="3-创建并启动项目"><a href="#3-创建并启动项目" class="headerlink" title="3.创建并启动项目"></a>3.创建并启动项目</h3><p>出现下面的界面，表示创建项目成功:<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs EXAMPLE">Success! Created your-app at /dir/your-app <br>Inside that directory, you can run several commands: <br><br>    npm start <br>        Starts the development server. <br>        <br>    npm run build <br>        Bundles the app into static files for production.<br><br>    npm test <br>        Starts the test runner. <br>        <br>    npm run eject <br>        Removes this tool and copies build dependencies, configuration files <br>        and scripts into the app directory. If you do this, you can’t go back! <br>        <br>We suggest that you begin by typing: <br><br>    cd your-app <br>    npm start <br>    <br>    Happy hacking!<br></code></pre></td></tr></table></figure></p><p>根据上面的提示，通过 cd your-app 命令进入目录并运行 npm start 即可运行项目。<br>生成项目的目录结构如下：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs EXAMPLE">├── README.md 使用方法的文档 <br>├── node_modules 所有的依赖安装的目录 <br>├── package-lock.json 锁定安装时的包的版本号,保证团队的依赖能保证一致。 <br>├── package.json <br>├── public 静态公共目录 <br>├── src 开发用的源代码目录<br></code></pre></td></tr></table></figure></p><h3 id="4-常见问题"><a href="#4-常见问题" class="headerlink" title="4.常见问题"></a>4.常见问题</h3><ul><li>npm安装失败<ul><li>切换为npm镜像为淘宝镜像</li><li>使用yarn，如果本来使用yarn还要失败，还得把yarn的源切换到国内</li><li>如果还没有办法解决，请删除node_modules及package-lock.json然后重新执行 npm install命令</li><li>再不能解决就删除node_modules及package-lock.json的同时清除npm缓存 npm cache clean —force 之后再执行 npm install 命令</li></ul></li><li>拓展：<br>  仓库包管理工具：  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SHELL">npm i -g nrm    安装<br></code></pre></td></tr></table></figure>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SHELL">nrm ls          查看 <br></code></pre></td></tr></table></figure>  查看执行结果如图：<br>  <img src="https://s1.xptou.com/2022/08/27/6309fe5a0dae7.png" alt="nrm ls查看">  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs BASH">nrm use yarn    切换镜像源<br></code></pre></td></tr></table></figure>  切换镜像源执行结果如图：<br>  <img src="https://s1.xptou.com/2022/08/27/630a01fddb1da.png" alt="nrm use yarn切换查看"></li></ul>]]></content>
    
    
    <summary type="html">记录搭建博客的经历~</summary>
    
    
    
    
    <category term="React 入门" scheme="https://jsq180.github.io/tags/React-%E5%85%A5%E9%97%A8/"/>
    
  </entry>
  
</feed>
